name: Release Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      matrix:
        include:
          - target: api-build
            file: Dockerfile.multi
            image_name: chat-with-llm

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch tags and set the latest tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) || echo "latest")
          LATEST_TAG=$(echo $LATEST_TAG | sed 's/^v//')
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      # Set up QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Prepare the environment
      - name: Prepare environment
        run: |
          cp .env.dev .env

      # Build and push Docker images for each target
      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.file }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image_name }}:${{ env.LATEST_TAG }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image_name }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image_name }}:${{ env.LATEST_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image_name }}:latest
          platforms: linux/amd64
          target: ${{ matrix.target }}
